} else {
if (message) cat(paste0("You need to upgrade your RStudio version to at least ", minver))
return(FALSE)
}
# ver_split <- strsplit(as.character(ver), "\\.", perl = TRUE)[[1]]
# minver_split <- strsplit(minver, "\\.", perl = TRUE)[[1]]
# if (ver_split[1] > minver_split[1]) {
#   if (message) (cat(message_ok))
#   invisible(TRUE)
# } else if (ver_split[1] < minver_split[1]) {
#   if (message) (cat(message_notok))
#   invisible(FALSE)
# } else {   # ver_split[1] == minver_split[1]
#   if (ver_split[2] > minver_split[2]) {
#     if (message) (cat(message_ok))
#     invisible(TRUE)
#   } else if (ver_split[2] < minver_split[2]) {
#     if (message) (cat(message_notok))
#     invisible(FALSE)
#   } else {
#     if (ver_split[3] > minver_split[3]) {
#       if (message) (cat(message_ok))
#       invisible(TRUE)
#     } else if (ver_split[3] < minver_split[3]) {
#       if (message) (cat(message_notok))
#       invisible(FALSE)
#     } else {
#       if (length(minver_split) > 3 & length(ver_split) > 3) {
#         if (ver_split[4] >= minver_split[4]) {
#           if (message) (cat(message_ok))
#           invisible(TRUE)
#         } else if (ver_split[4] < minver_split[4]) {
#           if (message) (cat(message_notok))
#           invisible(FALSE)
#         } else {   # depth 4 does not count
#           if (message) (cat(message_ok))
#           invisible(TRUE)
#         }
#       }
#     }
#   }
# }
}
check_rstudio("2022.6.2.555")
check_rstudio <- function(minver = "2022.7.1.554", message = TRUE) {
ver <- rstudioapi::versionInfo()$version
if (ver >= minver) {
if (message) cat("Your version of RStudio is fine")
invisible(TRUE)
} else {
if (message) cat(paste0("You need to upgrade your RStudio version to at least ", minver))
invisible(FALSE)
}
# ver_split <- strsplit(as.character(ver), "\\.", perl = TRUE)[[1]]
# minver_split <- strsplit(minver, "\\.", perl = TRUE)[[1]]
# if (ver_split[1] > minver_split[1]) {
#   if (message) (cat(message_ok))
#   invisible(TRUE)
# } else if (ver_split[1] < minver_split[1]) {
#   if (message) (cat(message_notok))
#   invisible(FALSE)
# } else {   # ver_split[1] == minver_split[1]
#   if (ver_split[2] > minver_split[2]) {
#     if (message) (cat(message_ok))
#     invisible(TRUE)
#   } else if (ver_split[2] < minver_split[2]) {
#     if (message) (cat(message_notok))
#     invisible(FALSE)
#   } else {
#     if (ver_split[3] > minver_split[3]) {
#       if (message) (cat(message_ok))
#       invisible(TRUE)
#     } else if (ver_split[3] < minver_split[3]) {
#       if (message) (cat(message_notok))
#       invisible(FALSE)
#     } else {
#       if (length(minver_split) > 3 & length(ver_split) > 3) {
#         if (ver_split[4] >= minver_split[4]) {
#           if (message) (cat(message_ok))
#           invisible(TRUE)
#         } else if (ver_split[4] < minver_split[4]) {
#           if (message) (cat(message_notok))
#           invisible(FALSE)
#         } else {   # depth 4 does not count
#           if (message) (cat(message_ok))
#           invisible(TRUE)
#         }
#       }
#     }
#   }
# }
}
check_rstudio("2022.6.2.555")
check_rstudio("2022.7.2.555")
rstudioapi::versionInfo()$version
check_rstudio("2022.7.1.555")
check_rstudio("2022.7.1.554")
bootcamp:::check_packages
bootcamp:::check_rstudio
bootcamp:::check_r_equal
bootcamp:::check_rstudio
R.version.string
R.version.string()
R.version.string
R.version
check_r_equal_or_larger <- function(minver = "4.2.1", message = TRUE) {
major_r <- R.Version()$major
minor_r <- R.Version()$minor
ver <- paste0(major_r, ".", minor_r)
if (ver >= minver) {
if (message) cat("Your version of RStudio is fine")
invisible(TRUE)
} else {
if (message) cat(paste0("You need to upgrade your RStudio version to at least ", minver))
invisible(FALSE)
}
}
check_r_equal_or_larger()
check_r_equal_or_larger("4.2.0")
rstudioapi::versionInfo()$version
ver_split <- strsplit(ver, ".", perl = TRUE)
ver <- rstudioapi::versionInfo()$version
ver_split <- strsplit(ver, ".", perl = TRUE)
ver_split <- strsplit(ver, "\.", perl = TRUE)
ver_split <- strsplit(ver, "\\.", perl = TRUE)
strsplit
?strsplit
ver_split <- strsplit(ver, ".", fixed = TRUE)
ver
class(ver)
check_rstudio_equal_or_larger <- function(minver = "2022.7.1.554", message = TRUE) {
ver <- rstudioapi::versionInfo()$version
rstudioapi::versionInfo()$version
rstudioapi::versionInfo()$version
rstudioapi::versionInfo()$version |> class()
rstudioapi::versionInfo()$version > "2022.7.2"
rstudioapi::versionInfo()$version > "2022.7.0"
ver_split <- strsplit(as.character(ver), ".", fixed = TRUE)
ver_split
paste0(ver_split[[1]], collapse = ".")
ver_split <- strsplit(as.character(ver), ".", fixed = TRUE)[1:3]
ver <- paste0(ver_split[[1]], collapse = ".")
ver
ver <- rstudioapi::versionInfo()$version
ver_split <- strsplit(as.character(ver), ".", fixed = TRUE)[[1]][1:3]
ver <- paste0(ver_split, collapse = ".")
ver
check_rstudio_equal <- function(minver = "2022.7.1", message = TRUE) {
ver <- rstudioapi::versionInfo()$version
# limit to three levels
ver_split <- strsplit(as.character(ver), ".", fixed = TRUE)[[1]][1:3]
ver <- paste0(ver_split, collapse = ".")
minver_split <- strsplit(minver, ".", fixed = TRUE)[[1]][1:3]
minver <- paste0(minver_split, collapse = ".")
if (ver == minver) {
if (message) cat("Your version of RStudio is exactly right")
invisible(TRUE)
} else {
if (message) cat(paste0("You need to upgrade your RStudio version to at least ", minver))
invisible(FALSE)
}
}
source("~/.active-rstudio-document", echo=TRUE)
check_r_equal_or_larger()
check_r_equal_or_larger("4.2.2")
check_r_equal_or_larger("4.2.0")
check_rstudio_equal("2022.7.1.12345")
check_rstudio_equal("2022.7.1.9999")
check_rstudio_equal <- function(minver = "2022.7.1", message = TRUE) {
ver <- rstudioapi::versionInfo()$version
# limit to three levels
ver_split <- strsplit(as.character(ver), ".", fixed = TRUE)[[1]][1:3]
ver <- paste0(ver_split, collapse = ".")
minver_split <- strsplit(minver, ".", fixed = TRUE)[[1]][1:3]
minver <- paste0(minver_split, collapse = ".")
if (ver == minver) {
if (message) cat("Your version of RStudio is perfectly fine")
invisible(TRUE)
} else {
if (message) cat(paste0("You need to upgrade your RStudio version to  ", minver))
invisible(FALSE)
}
}
check_rstudio_equal("2022.7.1.9999")
check_rstudio_equal("2022.7.2.9999")
check_rstudio_equal <- function(minver = "2022.7.1", message = TRUE) {
ver <- rstudioapi::versionInfo()$version
# limit to three levels
ver_split <- strsplit(as.character(ver), ".", fixed = TRUE)[[1]][1:3]
ver <- paste0(ver_split, collapse = ".")
minver_split <- strsplit(minver, ".", fixed = TRUE)[[1]][1:3]
minver <- paste0(minver_split, collapse = ".")
if (ver == minver) {
if (message) cat("Your version of RStudio is perfectly fine")
invisible(TRUE)
} else {
if (message) cat(paste0("You need to upgrade your RStudio version to ", minver))
invisible(FALSE)
}
}
check_rstudio_equal("2022.7.2.9999")
check_rstudio_equal_or_larger <- function(minver = "2022.7.1.554", message = TRUE) {
ver <- rstudioapi::versionInfo()$version
if (ver >= minver) {
if (message) cat("Your version of RStudio is fine")
invisible(TRUE)
} else {
if (message) cat(paste0("You need to upgrade your RStudio version to at least ", minver))
invisible(FALSE)
}
}
check_r_equal_or_larger <- function(minver = "4.2.1", message = TRUE) {
major_r <- R.Version()$major
minor_r <- R.Version()$minor
ver <- paste0(major_r, ".", minor_r)
if (ver >= minver) {
if (message) cat("Your version of R is fine")
invisible(TRUE)
} else {
if (message) cat(paste0("You need to upgrade your R version to at least ", minver))
invisible(FALSE)
}
}
check_rstudio_equal <- function(minver = "2022.7.1", message = TRUE) {
ver <- rstudioapi::versionInfo()$version
# limit to three levels
ver_split <- strsplit(as.character(ver), ".", fixed = TRUE)[[1]][1:3]
ver <- paste0(ver_split, collapse = ".")
minver_split <- strsplit(minver, ".", fixed = TRUE)[[1]][1:3]
minver <- paste0(minver_split, collapse = ".")
if (ver == minver) {
if (message) cat("Your version of RStudio is perfectly fine")
invisible(TRUE)
} else {
if (message) cat(paste0("You need to upgrade your RStudio version to ", minver))
invisible(FALSE)
}
}
check_r_equal <- function(minver = "4.2.1", message = TRUE) {
major_r <- R.Version()$major
minor_r <- R.Version()$minor
ver <- paste0(major_r, ".", minor_r)
if (ver == minver) {
if (message) cat("Your version of R is exactly right")
invisible(TRUE)
} else {
if (message) cat(paste0("You need to upgrade your R version to at least ", minver))
invisible(FALSE)
}
}
# RStudio, at least 4.1717
check_RStudio <- function() {
check_rstudio_equal_or_larger("2022.07.1")
}
check_RStudio()
help(package = "learnr")
check_R()
bootcamp::bootcamp_tutorials()
load("C:/Dropbox/R/eigen_packages/=git/bootcamp2022/data/loans.rda")
load("C:/Dropbox/R/eigen_packages/=git/bootcamp2022/data/centrality.rda")
data(centrality, package = "bootcamp")
summary(centrality)
data(centrality, package = "bootcamp")
mod = lm(friendship ~ age + education)
data(centrality, package = "bootcamp")
mod = lm(friendship ~ age + education, data = centrality)
data(centrality, package = "bootcamp")
mod = lm(friendship ~ age + education, data = centrality)
summary(mod)
data(centrality, package = "bootcamp")
mod = lm(friendship ~ age + education, data = centrality)
summary(mod)
bootcamp::add_beta(mod)
bootcamp::add_beta(lm(friendship ~ ., data = centrality))
bootcamp::add_beta(lm(advice ~ ., data = centrality))
data(package = "bootcamp")
load("C:/Users/20177022/Desktop/fifa22.rda")
bootcamp::add_beta(lm(value_eur ~ ., data = fifa22))
View(fifa22)
sapply(fifa22, class)
bootcamp::add_beta(lm(value_eur ~ wage_eur + age + league_level, data = fifa22))
bootcamp::add_beta(lm(value_eur ~ wage_eur + age + league_level + league_name, data = fifa22))
bootcamp::fifa22
fifa22$league_name
fifa22$league_name <- as.numeric(fifa22$league_name)
fifa22$league_name
fifa22$league_name |> table()
fifa22$league_name |> table() |> length()
fifa22$league_name <- NULL # there are too many levels to be meaningful
bootcamp::add_beta(lm(value_eur ~ ., data = fifa22))
fifa22
bootcamp::add_beta(lm(value_eur ~ ., data = fifa22))
options("scipen")
??scipen
fifa22$nationality <- NULL # there are too many levels to be meaningful
bootcamp::add_beta(lm(value_eur ~ ., data = fifa22))
bootcamp::add_beta(lm(value_eur ~ . - wage_eur , data = fifa22))
options(scipen)
options("scipen")
options("scipen") <- 5
options()$scipen
options()$scipen <- 5
options(scipen = 5)
bootcamp::add_beta(lm(value_eur ~ . - wage_eur , data = fifa22))
data(centrality, package = "bootcamp")
mod = lm(friendship ~ age + education, data = centrality)
summary(mod)
bootcamp::add_beta(lm(advice ~ age + education, data = centrality))
data(centrality, package = "bootcamp")
mod = lm(friendship ~ age + education, data = centrality)
summary(mod)
bootcamp::add_beta(lm(advice ~ ., data = centrality))
data(centrality, package = "bootcamp")
mod = lm(friendship ~ age + education, data = centrality)
summary(mod)
bootcamp::add_beta(lm(advice ~ race + education, data = centrality))
data(centrality, package = "bootcamp")
mod = lm(friendship ~ age + education, data = centrality)
summary(mod)
bootcamp::add_beta(lm(advice ~ race + education + neuroticism  + agreeableness, data = centrality))
data(centrality, package = "bootcamp")
mod = lm(friendship ~ age + education, data = centrality)
summary(mod)
bootcamp::add_beta(lm(advice ~ race + education, data = centrality))
?bootcamp::centrality
table(centrality$race)
table(centrality$education)
bootcamp::add_beta(mod)
mod = lm(advice ~ race + education, data = centrality)
bootcamp::add_beta(mod)
View(centrality)
View(fifa22)
setwd("C:/Dropbox/R/eigen_packages/=git/bootcamp2022/data")
save(fifa22, file = "fifa22.rda", compress = "xz")
load("C:/Dropbox/R/eigen_packages/=git/bootcamp2022/data/lalonde.rda")
help(package = "networkdata")
View(fifa22)
320000*52
fifa22 <- read.csv("C:/Users/20177022/Downloads/Compressed/FIFA 22 complete player dataset/players_22.csv",
sep = ",")
fifa22[1:10, "wage_eur"]
fifa22[8,]
colnames(fifa22)
fifa <- read.csv("C:/Users/20177022/Downloads/Compressed/fifa19.csv", sep = ",")
fifa <- dplyr::select(fifa, nationality = Nationality,
name = Name, age = Age,  wage_eur = Wage,
value_eur = Value,
preferred_foot = Preferred.Foot,
height_cm = Height, weight_kg = Weight,
international_reputation = International.Reputation,
work_rate = Work.Rate,
position = Position,
attacking_crossing = Crossing,,
attacking_finishing = Finishing,
attacking_heading_accuracy = HeadingAccuracy,
attacking_short_passing = ShortPassing,
attacking_volleys = Volleys,
skill_dribbling = Dribbling,
skill_curve = Curve,,
skill_kick_accuracy = FKAccuracy,
skill_long_passing = LongPassing,
skill_ball_control = BallControl,
movement_acceleration = Acceleration,
movement_sprint_speed = SprintSpeed,
movement_agility = Agility,
movement_reactions = Reactions,
movement_balance = Balance,
power_shot_power = ShotPower,
power_jumping = Jumping,
power_stamina = Stamina,
power_strength = Strength,
power_long_shots = LongShots,
mentality_aggression = Aggression,
mentality_interceptions = Interceptions,
mentality_positioning = Positioning,
mentality_vision = Vision,
mentality_penalties = Penalties,
mentality_composure = Composure,
defending_marking = Marking,
defending_standing_tackle = StandingTackle,
defending_sliding_tackle = SlidingTackle,
goalkeeping_diving = GKDiving,
goalkeeping_handling = GKHandling,
goalkeeping_kicking =  GKKicking,
goalkeeping_positioning = GKPositioning,
goalkeeping_reflexes = GKReflexes,
)
fifa$nationality <- as.factor(fifa$nationality)
fifa$wage_eur <- stringr::str_remove(fifa$wage_eur, "€") |>
stringr::str_replace("K$", "000") |>
as.integer()
fifa$value_eur <- stringr::str_remove(fifa$value_eur, "€") |>
stringr::str_replace(stringr::fixed("."), ",")
M <- stringr::str_remove(fifa$value_eur[stringr::str_detect(fifa$value_eur, "M$")], "M") |>
stringr::str_replace(stringr::fixed(","), ".") |>
as.numeric()
M <- M * 1000000
fifa$value_eur[stringr::str_detect(fifa$value_eur, "M$")] <- M
K <- stringr::str_remove(fifa$value_eur[stringr::str_detect(fifa$value_eur, "K$")], "K") |>
stringr::str_replace(stringr::fixed(","), ".") |>
as.numeric()
K <- K * 1000
fifa$value_eur[stringr::str_detect(fifa$value_eur, "K$")] <- K
fifa$value_eur <- as.numeric(fifa$value_eur)
# spelers weghalen met value 0
fifa <- fifa[-which(fifa$value_eur == 0), ]
fifa$height_cm <- strsplit(fifa$height_cm, "'") |>
sapply(function(z) {
round(as.numeric(z[1]) * 30.48 + as.numeric(z[2])*2.54)
})
fifa$weight_kg <- stringr::str_remove(fifa$weight_kg, "lbs") |>
as.numeric() |>
{\(x) round(x*0.4536)}()
fifa$work_rate <- strsplit(fifa$work_rate, "/") |>
sapply(function(z) z[1])
fifa22=fifa
setwd("C:/Dropbox/R/eigen_packages/=git/bootcamp2022/data")
save(fifa, file = "fifa22.rda")
View(fifa22)
colnames(fifa22)
fifa22$name
0177022/Downloads/Compressed/FIFA 22 complete player dataset/players_22.csv",
fifa22 <- read.csv("C:/Users/20177022/Downloads/Compressed/FIFA 22 complete player dataset/players_22.csv",
sep = ",")
fifa22 <- dplyr::select(fifa22, name = long_name,
value_eur, wage_eur, age, height_cm, weight_kg,
league_name, league_level, position = club_position,
club_contract_valid_until, nationality = nationality_name,
preferred_foot, weak_foot, skill_moves, international_reputation,
work_rate, body_type, attacking_crossing, attacking_finishing,
attacking_heading_accuracy, attacking_short_passing,
attacking_volleys, skill_dribbling, skill_curve,
skill_fk_accuracy, skill_long_passing, skill_ball_control,
movement_acceleration, movement_sprint_speed, movement_agility,
movement_reactions, movement_balance, power_shot_power,
power_jumping, power_stamina, power_strength,
power_long_shots, mentality_aggression, mentality_interceptions,
mentality_positioning, mentality_vision, mentality_penalties,
mentality_composure, defending_marking_awareness,
defending_standing_tackle, defending_sliding_tackle,
goalkeeping_diving, goalkeeping_handling, goalkeeping_kicking,
goalkeeping_positioning, goalkeeping_reflexes)
# weggooien als er geen wage of value data is
fifa22 <- fifa22[!(is.na(fifa22$value_eur) | is.na(fifa22$wage_eur)), ]
fifa22$name <- stringr::str_replace_all(fifa22$name, " ", "_") |>
stringr::str_replace_all(stringr::fixed("._"), "_")
fifa22 <- fifa22[-which(duplicated(fifa22$name)), ]  # 20 dubbelen weg
rownames(fifa22) <- fifa22$name
fifa22$name <- NULL
fifa22$value_eur <- as.integer(fifa22$value_eur)
fifa22$wage_eur <- as.integer(fifa22$wage_eur)
fifa22$nationality <- as.factor(fifa22$nationality)
fifa22$position <- as.factor(fifa22$position)
fifa22$position <- forcats::fct_recode(fifa22$position,
striker = "CF", striker = "ST", striker = "LS", striker = "RS",
winger = "LF", winger = "LW", winger = "RF", winger = "RW",
off_midfield = "LAM", off_midfield = "RAM", off_midfield = "CAM",
midfield = "LCM", midfield = "CM", midfield = "RCM",
midfield = "LM", midfield = "RM",
def_midfield = "LDM", def_midfield = "CDM", def_midfield = "RDM",
back_side = "LWB", back_side = "LB", back_side = "RWB", back_side = "RB",
back_center = "LCB", back_center = "CB", back_center = "RCB",
goalkeeper = "GK"
)
levels(fifa22$position) <- c("SUB", "goalkeeper", "back_center", "back_side",
"def_midfield", "midfielder", "offf_midfield",
"winger", "striker", "RES")
fifa22$work_rate <- strsplit(fifa22$work_rate, "/") |>
sapply(function(z) z[1])
fifa22$work_rate <- factor(fifa22$work_rate, levels = c("Low", "Medium", "High"))
fifa22$league_name <- as.factor(fifa22$league_name)
fifa22$body_type <- as.factor(fifa22$body_type)
fifa22$body_type <- forcats::fct_recode(fifa22$body_type,
lean = "Lean (170-)",
lean = "Lean (170-185)",
lean = "Lean (185+)",
normal = "Normal (170-)",
normal = "Normal (170-185)",
normal = "Normal (185+)",
stocky = "Stocky (170-)",
stocky = "Stocky (170-185)",
stocky = "Stocky (185+)",
unique = "Unique")
levels(fifa22$body_type) <- c("unique", "lean", "normal", "stocky")
fifa22$preferred_foot <- as.factor(fifa22$preferred_foot)
fifa22$league_name <- NULL # there are too many levels to be meaningful
fifa22$nationality <- NULL # there are too many levels to be meaningful
# complete.cases(fifa22) |> sum() == nrow(fifa22)
setwd("C:/Dropbox/R/eigen_packages/=git/bootcamp2022/data")
save(fifa22, file = "fifa22.rda", compress = "xz")
colnames(fifa22)
bootcamp::check_r_equal_or_larger()
mod_2 <- lm(after_sales ~ before_sales + logo, data = amazon)
data(amazon, packge = "bootcamp")
data(amazon, package = "bootcamp")
mod_2 <- lm(after_sales ~ before_sales + logo, data = amazon)
mod_2$coefficients
data(dozen, package = "bootcamp")
dozen$one
remove.packages("outliertree")
# Check whether required packages are installed
pkgs <- matrix(c(
"data.table", "1.12.0", "CRAN",
"learnr", "0.10.0", "CRAN",
"gradethis", "0.2.3.9001", "rstudio/gradethis",
"outliertree", "1.7.4", "CRAN"
), byrow = TRUE, ncol = 3) |>
as.data.frame() |>
setNames(c("pkg", "version", "where"))
bootcamp:::check_packages(pkgs)
remove.packages("outliertree")
SNA4DS:::check_packages
